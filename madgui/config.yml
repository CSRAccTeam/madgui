line_view:

  # name of a unit in ``unum.units``
  unit:
    s   :   m
    envx:   mm
    envy:   mm
    x:      mm
    y:      mm

  label:
    s: "position $s$"
    envx: "$\\Delta x$"
    envy: "$\\Delta y$"
    x: "$x$"
    y: "$y$"

  title:
    "": "beam position"
    env: "beam envelope"

  # keyword arguments to ``matplotlib.axes.Axes.plot()``
  curve_style:
    x:
      color: "#8b1a0e"
      marker: "o"
      fillstyle: "none"
      linestyle: "-"

    y:
      color: "#005000"
      marker: "o"
      fillstyle: "none"
      linestyle: "-"

  # keyword arguments to ``matplotlib.patches.Rectangle()`` and
  # ``matplotlib.axes.vlines()``:
  element_style:
    f-quadrupole: {color: "#ff0000", alpha: 0.3}
    d-quadrupole: {color: "#0000ff", alpha: 0.3}
    f-sbend:      {color: "#770000", alpha: 0.3}
    d-sbend:      {color: "#000077", alpha: 0.3}
    multipole:    {color: "#00ff00", alpha: 0.3}
    solenoid:     {color: "#555555", alpha: 0.3}

  # keyword arguments to ``matplotlib.axes.Axes.plot()``
  constraint_style:
    marker: "s"
    fillstyle: "full"
    markersize: 7
    color: 'black'


madx_units:
  L:        m
  lrad:     m
  at:       m
  s:        m
  x:        m
  y:        m
  betx:     m
  bety:     m
  angle:    rad
  k1:       {m: -2}
  k1s:      {m: -2}
  k1l:      {m: -2}
  ex:       m
  ey:       m
  tilt:     rad
  hgap:     m
  h:        {rad: 1, m: -1}
  fint:     1
  fintx:    1
  e1:       rad
  e2:       rad


# Select which elements+paramters can be varied when matching a TWISS
# function:
matching:
  betx:
    quadrupole: [k1, k1s]
  bety:
    quadrupole: [k1, k1s]
  x:
    quadrupole: [k1, k1s]
  y:
    quadrupole: [k1, k1s]
